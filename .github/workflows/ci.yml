name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest pytest-cov
        pip install -e ".[dev,test]"
        pip install -r requirements-dev.txt
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
    
    - name: Run tests with pytest and coverage
      run: |
        pytest --cov=mcp_sdk --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black mypy
        pip install -r requirements-dev.txt
        pip install pydantic requests rich pyyaml types-requests types-PyYAML
    
    - name: Lint with flake8
      run: |
        flake8 mcp_sdk --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 mcp_sdk --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check formatting with black
      run: |
        black --check mcp_sdk
    
    - name: Type check with mypy
      run: |
        mypy mcp_sdk

